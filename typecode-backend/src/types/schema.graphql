type Query {
  findUser(id: ID!): User
  me: User!
}

type mutation {
  login(email: String!, password: String!): String!
  signup(name: String!, email: String!): Boolean!
}

type Token {
  id: String
  userId: String
  accessedAt: String
  deleted: Boolean
  createdAt: String
  updatedAt: String
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  profile: String
  phoneNumber: String
  phoneNumberVerified: Boolean
  fcmToken: String
  rooms: [Room!]!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
}

type Room {
  id: ID!
  participants: [User!]!
  messages: [Message!]!
  createdAt: String!
  updatedAt: String!
  deletedAt: String
}

type Message {
  id: ID!
  text: String!
  from: User!
  to: User!
  room: Room!
  createdAt: String!
  updatedAt: String!
}

